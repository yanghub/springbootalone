<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.burro.dao.IRoleDao" >
	
	<!-- 通过id获取角色 -->
	<select id="getById" parameterType="java.lang.String" resultType="com.burro.entity.RoleEntity">
		SELECT 
			id,role_id, role_name, remark
		FROM m_role
		WHERE del_flag = '0' 
		AND id = #{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 通过roleId获取角色 -->
	<select id="getByRoleId" parameterType="java.lang.String" resultType="com.burro.entity.RoleEntity">
		SELECT 
			id,role_id, role_name, remark
		FROM m_role
		WHERE del_flag = '0' 
		AND role_id = #{roleId,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询角色统计 -->
	<select id="count" resultType="long" parameterType="com.burro.entity.RoleEntity" >
		SELECT count(*)
		FROM m_role
		<where>
			<if test="roleId != null and roleId != ''" >
				AND role_id LIKE CONCAT('%',#{roleId,jdbcType=VARCHAR},'%' )
			</if>
			<if test="roleName != null and roleName != ''" >
				AND role_name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="remark != null and remark != ''" >
				AND remark = #{remark,jdbcType=VARCHAR}
			</if>
		AND del_flag = '0'
	</where>
	</select>	
	
	<!-- 查询所有角色 -->
	<select id="list" resultType="com.burro.entity.RoleEntity" parameterType="com.burro.entity.RoleEntity" >
		SELECT 
			(select count(*) from m_user m  where mr.role_id= m.user_role_id and m.del_flag='0') AS userNumber,
			mr.id,
			mr.role_id,
			mr.role_name,
			mr.remark,
			mu.user_id as update_by, 
			DATE_FORMAT(mr.update_date,'%Y-%m-%d %H:%i:%S') AS update_date
		FROM m_role mr
		LEFT JOIN m_user mu ON mr.update_by = mu.user_id and mu.del_flag='0'
		<where>
			<if test="roleId != null and roleId != ''" >
				AND mr.role_id like CONCAT('%',#{roleId,jdbcType=VARCHAR},'%' )
			</if>
			<if test="roleName != null and roleName != ''" >
				AND mr.role_name like CONCAT('%',#{roleName,jdbcType=VARCHAR},'%' )
			</if>
			<if test="remark != null and remark != ''" >
				AND mr.remark = #{remark,jdbcType=VARCHAR}
			</if>
			<!-- 只显示未删除的角色 -->
			AND mr.del_flag = '0'
		</where>
		order by role_id
		limit #{start},#{rows}
	</select>
	
	<!--新增一条角色信息	-->
	<insert id="insert" parameterType="com.burro.entity.RoleEntity" >
		INSERT INTO m_role (
			id,role_id, role_name, remark, 
			create_by, create_date, update_by,update_date, del_flag
		) VALUES (
			REPLACE(UUID(),'-',''), #{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
			#{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, now(), #{updateBy,jdbcType=VARCHAR}, now(),'0'
		)
	</insert>
	
	<!--更新一条用户信息	-->
	<update id="update" parameterType="com.burro.entity.RoleEntity" >
		UPDATE m_role
		SET role_id = #{roleId,jdbcType=VARCHAR},
			role_name = #{roleName,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR},
			update_by = #{updateBy,jdbcType=VARCHAR},
			update_date = now()
		WHERE id = #{id,jdbcType=VARCHAR}
		AND del_flag='0'
	</update>
	
	<!--// TODO 批量删除操作 用作参考-->
	<!--批量删除角色 -->
	<delete id="deleteByIds">
		UPDATE m_role 
		SET del_flag='1',
			update_date=now(),
			update_by=#{updateBy} 
		WHERE id IN
		<foreach item="id" collection="ids" open="(" separator="," close=")">
			#{id}
		</foreach>
		AND del_flag='0'
	</delete>
	
	<!--取得当前角色下用户数量	-->
	<select id="check" resultType="long" parameterType="com.burro.entity.RoleEntity" >
		SELECT
			COUNT(*)
		FROM
			m_user
		where 
			user_role_id = #{roleId}
		AND 
			del_flag='0'
	</select>	
	
	
	<!--查询显示权限菜单树	-->
	<select id="listMenuPowerByRoleId" parameterType="java.lang.String" resultType="com.burro.entity.common.TreeNode">
		SELECT * FROM ( 
			<!--菜单权限查询-->
			SELECT 
				mm.menu_id AS id,
				mm.menu_pid AS p_id,
				mm.menu_name AS name,
				IF(mm.menu_level = 1,'false','true') as 'open',
				mm.menu_level as 'level',
				IF(ISNULL(mmp.menu_id),'false' ,'true') AS checked,
				mm.menu_sort 
			FROM m_menu mm
			LEFT JOIN m_menu_power mmp ON mm.menu_id = mmp.menu_id AND mmp.power_type='00' AND mmp.power_id=#{roleId} AND mmp.del_flag='0'
			WHERE mm.del_flag = '0'

			UNION
			<!--功能权限查询-->
			SELECT 
				mmf.func_id as id,
				mmf.menu_id as p_id,
				mbf.func_name as name,
				'false' as 'open',
				'2' as 'level',
				IF(ISNULL(mfp.func_id),'false','true') AS checked,
				mmf.func_id as menu_sort
			FROM m_menu_func mmf
			LEFT JOIN m_func_power mfp ON mmf.menu_id = mfp.menu_id AND mmf.func_id = mfp.func_id AND mfp.power_id = #{roleId} AND mfp.del_flag = '0'
			LEFT JOIN m_menu mm ON mmf.menu_id = mm.menu_id and mm.del_flag = '0'
			LEFT JOIN m_base_func mbf ON mmf.func_id = mbf.func_id AND mbf.del_flag = '0'
			WHERE mmf.del_flag = '0' AND mm.menu_id IS NOT NULL
			) all_table
		ORDER BY menu_sort
	</select>
</mapper>